----------------------------
В папке Проекты/KidReeds создаем папку 6_CustomerFunnel
Переносим из загрузок файл events_2023-07-28_2023-07-30.csv
Делаем его укороченную копию из 30 строк для отладки events_exemp.csv
В VSCode создаем файл customer_funnel.ipynb
Переходим в терминале файла в 6_CustomerFunnel
cd /путь к папке 6_CustomerFunnel

Источник по работе с пандас https://pythonru.com/uroki/osnovy-pandas-1-chtenie-fajlov-dataframe-otbor-dannyh

Внутри папки 6_CustomerFunnel создадем виртуальное окружение
python3.8 -m venv venv
source venv/bin/activate
python --version

Устанавливаем pandas
pip install pandas
pip install --upgrade pip

Пишем код
# import numpy as np
import pandas as pd

pd.read_csv('/Users/lemon/Desktop/Проекты/KidReeds/6_CustomerFunnel/events_exemp.csv', delimete=',')

Запускаем, получаем ошибку
ModuleNotFoundError: No module named 'pandas'

В терминале файла пишем
jupyter notebook

В открывшемся окне jupyter открываем файл customer_funnel.ipynb
Запускаем, все работает!

Спрашиваем у ИИ:
В датафрейме есть колонка event.
Данные в этой колонке могут принимать значения из списка [a, b, c, d].
Как получить словарь, ключи в котором значения из списка, а значения - сколько содержится записей в таблице датафрейм с заданным ключом из списка, с сортировкой по значениям словаря
Работает!

Вставляем в код реальный csv файл
Работает!
-----------------------------
Выкладка в гитхаб 
Терминал - в папке 6_CustomerFunnel 	
git init .
Создаем .gitignore
nano .gitignore

/venv
events_exemp.csv

		Ctrl + o и Enter сохранениеç
		Ctrl + x и Y и Enter выход
		выйти из редактора - напечатайте :qa и нажмите enter.
cat .gitignore

git add .
git commit -m '1 commit'

Гитхаб
Создаем репозитарий 6_CustomerFunnel
Терминал
git remote add origin git@github.com:lemon1964/6_CustomerFunnel
git branch -M main
git push -u origin main

https://github.com/lemon1964/6_CustomerFunnel
--------------------------
В VSCode открываем файл customer_funnel.ipynb
Справа сверху - выбор ядра - выбираем Python 3.8 с Анакондой
Видим, что - import pandas as pd - заработало - ОК
Корректируем путь файла в датафрейме
Проверяем, работает - ОК
---------------
Обновление в гитхаб
nano .gitignore

/venv
/.ipynb_checkpoints
events_exemp.csv


git add .
git commit -m '4 commit'
git push -u origin main
---------------


Модель аналитики.
-------------
-------------
Вопрос к ИИ - что лучше, ДРФ или ДРФ + Пандас?
Ответ - ДРФ + Пандас
--------------------
--------------------


31.07.23 Новое ТЗ

Дано:
test_data.csv

Задачи:

1/ Какая средняя длина одной сессии с мобильными приложением?
Для определения понадобятся:
 ⁃ session_id (уникальный номер сессии)
 ⁃ event_time (время в секундах от начала сессии)

2/ Из какой страны больше всего скачивали приложение?
 ⁃ device_id (уникальный номер устройства)
 ⁃ country

3/ На какую сказку больше всего нажимают на главном экране?
Для этого нужно смотреть кол-во событий (event) с типом «tapStoryButton» и затем смотреть что в поле «value».
В поле «value» добавляется доп информация о событии - в нашем случае на какую сказку нажали
----------------------------------
Ссылка на файл test_data.csv в гугл Диск
https://drive.google.com/file/d/1LQqBMhf71uunBkLSkUT6T2f6NWjjT2v9/view?usp=share_link
--------------------

Запрос в ИИ
Русский язык
Дано: файл test_data.csv
Ссылка https://drive.google.com/file/d/1LQqBMhf71uunBkLSkUT6T2f6NWjjT2v9/view?usp=share_link

Задачи:

1/ Какая средняя длина одной сессии с мобильными приложением?
Для определения понадобятся:
 ⁃ session_id (уникальный номер сессии)
 ⁃ event_time (время в секундах от начала сессии)

2/ Из какой страны больше всего скачивали приложение?
 ⁃ device_id (уникальный номер устройства)
 ⁃ country

3/ На какую сказку больше всего нажимают на главном экране?
Для этого нужно смотреть кол-во событий (event) с типом «tapStoryButton» и затем смотреть что в поле «value».
В поле «value» добавляется доп информация о событии - в нашем случае на какую сказку нажали

Какое рекомендуемое решение?


Ответ
Для решения данных задач вам необходимо выполнить анализ данных из CSV-файла и провести несколько вычислений. Подходящим решением будет использование библиотеки Pandas вместе с Python для обработки и анализа данных.

Вот общий план для решения каждой из задач:

Средняя длина сессии с мобильным приложением:

Импортировать данные из CSV-файла в Pandas DataFrame.
Группировать данные по session_id.
Вычислить разницу между максимальным и минимальным значениями event_time для каждой сессии.
Посчитать среднее значение разницы для всех сессий.
Страна с наибольшим количеством скачиваний приложения:

Импортировать данные из CSV-файла в Pandas DataFrame.
Группировать данные по country.
Подсчитать количество уникальных device_id для каждой страны.
Найти страну с наибольшим количеством уникальных device_id.
Наиболее популярная сказка на главном экране:

Импортировать данные из CSV-файла в Pandas DataFrame.
Отфильтровать события с типом tapStoryButton.
Посчитать количество событий для каждого значения в поле value.
Найти значение в поле value с наибольшим количеством событий.
Рекомендуемое решение состоит в следующем:

Установите Python, если у вас его ещё нет, и установите библиотеку Pandas.
Скачайте CSV-файл по указанной вами ссылке.
Используйте Python и Pandas для обработки данных и решения каждой из трех задач, следуя общему плану, описанному выше.
Пример использования Pandas для решения задач:

python
Copy code
import pandas as pd

# Загрузка данных из CSV-файла в DataFrame
data = pd.read_csv("test_data.csv")

# 1. Средняя длина сессии с мобильным приложением
average_session_length = data.groupby('session_id')['event_time'].apply(lambda x: x.max() - x.min()).mean()

# 2. Страна с наибольшим количеством скачиваний приложения
most_downloaded_country = data.groupby('country')['device_id'].nunique().idxmax()

# 3. Наиболее популярная сказка на главном экране
most_tapped_story = data[data['event'] == 'tapStoryButton']['value'].value_counts().idxmax()

print("Средняя длина одной сессии с мобильным приложением:", average_session_length)
print("Страна с наибольшим количеством скачиваний приложения:", most_downloaded_country)
print("Наиболее популярная сказка на главном экране:", most_tapped_story)
Обратите внимание, что код приведен в качестве примера и предполагает, что CSV-файл с данными находится в том же каталоге, что и исполняемый скрипт. При необходимости может потребоваться указать полный путь к файлу. Также учтите, что структура CSV-файла и его содержимое должны соответствовать предполагаемой структуре для успешной обработки данных.

Желаю удачи в решении задач! Если у вас возникнут дополнительные вопросы, не стесняйтесь обращаться.
--------------------
Работает!
-------------
Обновление в гитхаб
nano .gitignore

/venv
/.ipynb_checkpoints
events_exemp.csv
чатжпт.txt
/.ipynb_checkpoints


git add .
git commit -m '4 commit'
git push -u origin main
---------------

